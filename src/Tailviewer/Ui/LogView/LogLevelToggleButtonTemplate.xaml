<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:converters="clr-namespace:Metrolib.Converters;assembly=Metrolib"
                    xmlns:local="clr-namespace:Tailviewer.Ui.LogView">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Tailviewer;component/Themes/Constants.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <converters:NullToCollapsedConverter x:Key="NullToCollapsedConverter" />

    <Style TargetType="{x:Type local:LogLevelToggleButton}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryForegroundBrush}" />
        <Setter Property="Margin" Value="4,2,4,2" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="MaxWidth" Value="60" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:LogLevelToggleButton}">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Margin="{TemplateBinding Padding}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Row="0"
                                  Margin="0,0,2,0"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  Visibility="{Binding Icon, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource NullToCollapsedConverter}}">
                                <!--<Viewbox HorizontalAlignment="Center">
                                    <Canvas Width="24" Height="24">
                                        <Path
                                            Data="{TemplateBinding IconBackground}"
                                            Fill="{TemplateBinding IconBackgroundBrush}" />
                                    </Canvas>
                                </Viewbox>-->
                                <Viewbox HorizontalAlignment="Center">
                                    <Canvas Width="24" Height="24">
                                        <Path
                                            Data="{TemplateBinding Icon}"
                                            Fill="{TemplateBinding Foreground}" />
                                    </Canvas>
                                </Viewbox>
                            </Grid>
                            
                            <ContentPresenter Grid.Column="1"
                                              x:Name="PART_Presenter"
                                              Content="{TemplateBinding Content}"
                                              ContentTemplate="{TemplateBinding ContentTemplate}"
                                              ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{StaticResource PrimaryDarkBrush}" />
            </MultiTrigger>
            <!--<Trigger Property="IsChecked" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource PrimaryForegroundBrush}" />
            </Trigger>-->
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Foreground" Value="{StaticResource ForegroundBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>